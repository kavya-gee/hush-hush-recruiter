# Generated by Django 5.1.6 on 2025-02-26 20:37

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(blank=True, max_length=255, verbose_name='full name')),
                ('is_candidate', models.BooleanField(default=False)),
                ('is_hiring_manager', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('DIRECT', 'Direct Application'), ('REFERRAL', 'Referral'), ('LINKEDIN', 'LinkedIn'), ('GITHUB', 'GitHub'), ('CAREER_FAIR', 'Career Fair'), ('OTHER', 'Other')], default='DIRECT', max_length=50)),
                ('source_ranking', models.IntegerField(default=0)),
                ('resume_url', models.URLField(blank=True, null=True)),
                ('profile_completed', models.BooleanField(default=False)),
                ('skills', models.TextField(blank=True)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('generated_password', models.CharField(blank=True, help_text='Temporary storage for generated password. Clear after first login.', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HiringManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('position', models.CharField(blank=True, max_length=100)),
                ('can_create_assessments', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hiring_manager_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company_name', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('time_limit_minutes', models.PositiveIntegerField(default=120)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent to Candidate'), ('ACCEPTED', 'Accepted by Candidate'), ('STARTED', 'Started'), ('FINISHED', 'Finished'), ('SCORING', 'Being Scored'), ('SCORED', 'Scored'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('score', models.PositiveIntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('question_frontend', models.TextField(blank=True)),
                ('question_backend', models.TextField(blank=True)),
                ('question_database', models.TextField(blank=True)),
                ('chosen_question_type', models.CharField(blank=True, choices=[('FRONTEND', 'Frontend Development'), ('BACKEND', 'Backend Development'), ('DATABASE', 'Database Design'), ('FULLSTACK', 'Full Stack')], max_length=20, null=True)),
                ('personality_questions', models.JSONField(blank=True, null=True)),
                ('personality_answers', models.JSONField(blank=True, null=True)),
                ('code_submission', models.TextField(blank=True)),
                ('code_language', models.CharField(blank=True, max_length=50)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='core.candidate')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessments', to='core.hiringmanager')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
